apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'eclipse-wtp'
apply plugin: 'war'

group = 'com.tistory.devyongsik'
version = '0.5-SNAPSHOT'

/*
 -Dtarget=값 : default는 local
*/

def versions = [
  hibernate : "4.1.7.Final",
	spring : "3.2.3.RELEASE",
	slf4j : "1.6.6",
	logback : "1.0.13",
	mysqlConnector : "5.1.18",
	springDataJpa : "1.3.4.RELEASE",
	querydsl: "2.9.0"
]

target = 'local'

sourceSets {
        generated {
                java {
                        srcDirs = ['src/main/generated']
                }
        }
}

allprojects {
    if(project.hasProperty('target')) {
    	sourceSets {
    		main.resources.srcDirs = ["src/main/generated", "src/main/resources", "src/main/resources-${target}"]
    	}
    } else {
    	sourceSets {
    		main.resources.srcDirs = ["src/main/generated", "src/main/resources", "src/main/resources-local"]
    	}
    }
}

sourceSets.generated.output.resourcesDir = sourceSets.generated.output.classesDir
sourceSets.main.output.resourcesDir = sourceSets.main.output.classesDir
sourceSets.test.output.resourcesDir = sourceSets.test.output.classesDir

repositories {
        mavenCentral()
        //maven { url 'https://raw.github.com/neuland/jade4j/master/releases' }
        //maven { url 'https://raw.github.com/neuland/spring-jade4j/master/releases' }
        maven {
            url "http://repository.springsource.com/maven/bundles/release"
        }
        maven {
            url "http://repository.springsource.com/maven/bundles/external"
        }
}

configurations {
	querydslapt
}

dependencies {
	compile(
		[group: 'junit', name: 'junit', version: '4.11'],
		[group: 'org.slf4j', name: 'slf4j-api', version: "${versions.slf4j}"],
		[group: 'org.slf4j', name: 'jcl-over-slf4j', version: "${versions.slf4j}"],
		[group: 'org.slf4j', name: 'log4j-over-slf4j', version: "${versions.slf4j}"],
		[group: 'org.slf4j', name: 'slf4j-jcl', version: "${versions.slf4j}"],
		[group: 'ch.qos.logback', name: 'logback-core', version: "${versions.logback}"],
		[group: 'ch.qos.logback', name: 'logback-classic', version: "${versions.logback}"],
		[group: 'ch.qos.logback', name: 'logback-access', version: "${versions.logback}"],
		[group: 'org.springframework', name: 'org.springframework.web.servlet', version: "${versions.spring}"],
		[group: 'org.springframework', name: 'org.springframework.web', version: "${versions.spring}"],
		[group: 'org.springframework', name: 'org.springframework.core', version: "${versions.spring}"],
		[group: 'org.springframework', name: 'org.springframework.test', version: "${versions.spring}"],
		[group: 'org.springframework', name: 'org.springframework.beans', version: "${versions.spring}"],
		[group: 'org.springframework', name: 'org.springframework.jdbc', version: "${versions.spring}"],
		[group: 'org.springframework', name: 'org.springframework.orm', version: "${versions.spring}"],
		[group: 'org.springframework', name: 'spring-context', version: "${versions.spring}"],
		[group: 'org.springframework', name: 'spring-tx', version: "${versions.spring}"],
		[group: 'org.springframework', name: 'spring-webmvc', version: "${versions.spring}"],
		[group: 'org.springframework', name: 'org.springframework.jdbc', version: "${versions.spring}"],
		[group: 'org.springframework', name: 'spring-context-support', version: "${versions.spring}"],
		[group: 'org.springframework.data', name: 'spring-data-jpa', version: "${versions.springDataJpa}"],
		[group: 'org.hibernate', name: 'hibernate-core', version: "${versions.hibernate}"],
		[group: 'org.hibernate', name: 'hibernate-validator', version: '4.3.0.Final'],
		[group: 'org.hibernate', name: 'hibernate-entitymanager', version: "${versions.hibernate}"],
		[group: 'org.hibernate.javax.persistence', name: 'hibernate-jpa-2.0-api', version: '1.0.1.Final'],
		[group: 'com.google.guava', name: 'guava', version: '13.0.1'],
		[group: 'org.codehaus.jackson', name: 'jackson-mapper-asl', version: '1.9.9'],
		[group: 'org.codehaus.groovy', name: 'groovy-all', version: '2.1.6'],
		[group: 'javax.servlet', name: 'jstl', version: '1.2'],
		[group: 'mysql', name: 'mysql-connector-java', version: "${versions.mysqlConnector}"],
		[group: 'jaxen', name: 'jaxen', version: '1.1.4'],
		[group: 'dom4j', name: 'dom4j', version: '1.6.1'],
		[group: 'commons-lang', name: 'commons-lang', version: '2.6'],
		[group: 'org.hamcrest', name: 'hamcrest-all', version: '1.+'],
		[group: 'org.mockito', name: 'mockito-all', version: '1.+'],
		[group: 'com.h2database', name: 'h2', version: '1.3.160'],		
		[group: 'javax.servlet', name: 'javax.servlet-api', version: '3.0.1'],
		[group: 'commons-dbcp', name: 'commons-dbcp', version: '1.4'],
		[group: 'com.jolbox', name: 'bonecp', version: '0.7.1.RELEASE'],
        [group: 'org.jsoup', name: 'jsoup', version: '1.7.2'],
		[group: 'org.hsqldb', name: 'hsqldb', version: '2.0.0'],
		[group: 'javax.servlet', name: 'javax.servlet-api', version: '3.0.1'],
		[group: 'com.mysema.querydsl', name : 'querydsl-jpa', version: "${versions.querydsl}"]
	)

	querydslapt(
		[group: 'com.mysema.querydsl', name: 'querydsl-apt', version: "${versions.querydsl}"]
	)

	testRuntime(
        [group: 'junit', name: 'junit', version: '4.11'],
		[group: 'org.slf4j', name: 'slf4j-api', version: "${versions.slf4j}"],
		[group: 'org.slf4j', name: 'jcl-over-slf4j', version: "${versions.slf4j}"],
		[group: 'org.slf4j', name: 'log4j-over-slf4j', version: "${versions.slf4j}"],
		[group: 'org.slf4j', name: 'slf4j-jcl', version: "${versions.slf4j}"],
		[group: 'ch.qos.logback', name: 'logback-core', version: "${versions.logback}"],
		[group: 'ch.qos.logback', name: 'logback-classic', version: "${versions.logback}"],
		[group: 'ch.qos.logback', name: 'logback-access', version: "${versions.logback}"],
		[group: 'org.springframework', name: 'org.springframework.web.servlet', version: "${versions.spring}"],
		[group: 'org.springframework', name: 'org.springframework.web', version: "${versions.spring}"],
		[group: 'org.springframework', name: 'org.springframework.core', version: "${versions.spring}"],
		[group: 'org.springframework', name: 'org.springframework.test', version: "${versions.spring}"],
		[group: 'org.springframework', name: 'org.springframework.beans', version: "${versions.spring}"],
		[group: 'org.springframework', name: 'org.springframework.jdbc', version: "${versions.spring}"],
		[group: 'org.springframework', name: 'org.springframework.orm', version: "${versions.spring}"],
		[group: 'org.springframework', name: 'spring-context', version: "${versions.spring}"],
		[group: 'org.springframework', name: 'spring-tx', version: "${versions.spring}"],
		[group: 'org.springframework', name: 'spring-webmvc', version: "${versions.spring}"],
		[group: 'org.springframework', name: 'org.springframework.jdbc', version: "${versions.spring}"],
		[group: 'org.springframework', name: 'spring-context-support', version: "${versions.spring}"],
		[group: 'org.springframework.data', name: 'spring-data-jpa', version: "${versions.springDataJpa}"],
		[group: 'org.hibernate', name: 'hibernate-core', version: "${versions.hibernate}"],
		[group: 'org.hibernate', name: 'hibernate-validator', version: '4.3.0.Final'],
		[group: 'org.hibernate', name: 'hibernate-entitymanager', version: "${versions.hibernate}"],
		[group: 'org.hibernate.javax.persistence', name: 'hibernate-jpa-2.0-api', version: '1.0.1.Final'],
		[group: 'com.google.guava', name: 'guava', version: '13.0.1'],
		[group: 'org.codehaus.jackson', name: 'jackson-mapper-asl', version: '1.9.9'],
		[group: 'org.codehaus.groovy', name: 'groovy-all', version: '2.1.6'],
		[group: 'javax.servlet', name: 'jstl', version: '1.2'],
		[group: 'mysql', name: 'mysql-connector-java', version: "${versions.mysqlConnector}"],
		[group: 'jaxen', name: 'jaxen', version: '1.1.4'],
		[group: 'dom4j', name: 'dom4j', version: '1.6.1'],
		[group: 'commons-lang', name: 'commons-lang', version: '2.6'],
		[group: 'org.hamcrest', name: 'hamcrest-all', version: '1.+'],
		[group: 'org.mockito', name: 'mockito-all', version: '1.+'],
		[group: 'com.h2database', name: 'h2', version: '1.3.160'],		
		[group: 'javax.servlet', name: 'javax.servlet-api', version: '3.0.1'],
		[group: 'commons-dbcp', name: 'commons-dbcp', version: '1.4'],
		[group: 'com.jolbox', name: 'bonecp', version: '0.7.1.RELEASE'],
        [group: 'org.jsoup', name: 'jsoup', version: '1.7.2'],
		[group: 'org.hsqldb', name: 'hsqldb', version: '2.0.0'],
		[group: 'javax.servlet', name: 'javax.servlet-api', version: '3.0.1'],
		[group: 'com.mysema.querydsl', name : 'querydsl-jpa', version: "${versions.querydsl}"]
    )
}

task initProject << {
	createDir = {
		it.mkdirs();
	}
	
	sourceSets*.java.srcDirs*.each createDir
	sourceSets*.resources.srcDirs*.each createDir
	createDir webAppDir
	createDir new File(webAppDir, '/WEB-INF/views');

	processResources {
		from(sourceSets.main.resources.srcDirs) {
		}
	}
}

eclipse {
	classpath {
		downloadSources=true
	}

	jdt {
		file {
			withProperties { 
				properties -> properties.setProperty("encoding//src/main/java", "utf-8")
					      properties.setProperty("encoding//src/main/resources", "utf-8")
					      properties.setProperty("encoding//src/test/java", "utf-8")
					      properties.setProperty("encoding//src/test/resources", "utf-8")
						  //properties.setProperty("encoding//src/main/generated", "utf-8")
			}		
		}
	}

	wtp {
		component {
			contextPath = '/'
		}

		facet {
			facets = facets

			//facet name: 'jst.web', version: '2.5'
			facet name: 'jst.java',	version: '7.0'
		}
	}

	project {
    	natures 'com.google.gwt.eclipse.core.gwtNature'
    	natures 'org.springframework.ide.eclipse.core.springnature'
    	buildCommand 'org.springframework.ide.eclipse.core.springbuilder'
  	}
}

eclipseJdt << {
    File f = file('.settings/org.eclipse.core.resources.prefs')
    f.write('eclipse.preferences.version=1\n')
    f.append('encoding/<project>=utf-8')
}

task generateQueryDSL(type: JavaCompile, group: 'build', description: 'Generates the QueryDSL query types') {
        source = sourceSets.main.java
        classpath = configurations.compile + configurations.querydslapt
        options.compilerArgs = [
                "-proc:only",
                "-processor", "com.mysema.query.apt.jpa.JPAAnnotationProcessor"
        ]
        destinationDir = sourceSets.generated.java.srcDirs.iterator().next()
}

compileJava {
        dependsOn generateQueryDSL
        source generateQueryDSL.destinationDir
}
 
compileGeneratedJava {
        dependsOn generateQueryDSL
        options.warnings = false
        classpath += sourceSets.main.runtimeClasspath
}
 
clean {
        delete sourceSets.generated.java.srcDirs
}

tasks.eclipse.dependsOn cleanEclipse
tasks.eclipse.dependsOn generateQueryDSL
tasks.eclipse.dependsOn initProject
tasks.idea.dependsOn generateQueryDSL
